package com.jiyoung.config;

import javax.servlet.FilterRegistration;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.ServletRegistration;

import org.springframework.web.WebApplicationInitializer;
import org.springframework.web.context.support.AnnotationConfigWebApplicationContext;
import org.springframework.web.filter.CharacterEncodingFilter;
import org.springframework.web.servlet.DispatcherServlet;

public class Initializer implements WebApplicationInitializer
{

	@Override
	public void onStartup(ServletContext servletContext) throws ServletException
	{
		// profile
		// servletContext.setInitParameter("spring.profiles.active", "real");

		AnnotationConfigWebApplicationContext context = new AnnotationConfigWebApplicationContext();
		context.setServletContext(servletContext);
		context.setConfigLocation("com.jiyoung.config");
		context.refresh();

		// dispatcher servlet
		ServletRegistration.Dynamic dispatcher = servletContext.addServlet("DispatcherServlet",
				new DispatcherServlet(context));
		dispatcher.setLoadOnStartup(1);
		dispatcher.addMapping("/");

		// character encoding filter
		FilterRegistration.Dynamic characterEncodingFilter = servletContext.addFilter("characterEncodingFilter",
				new CharacterEncodingFilter());
		characterEncodingFilter.setInitParameter("encoding", "UTF-8");
		characterEncodingFilter.setInitParameter("forceEncoding", "true");
		characterEncodingFilter.addMappingForUrlPatterns(null, false, "/*");

		/**
		 * addMappingForUrlPatterns dispatcherTypes - 어떤 요청에 맵핑할지 결정 (REQUEST, RESPONSE
		 * 등) null 입력 시 DispatcherType.REQUEST isMatchAfter - FilterRegistration의 범위 아래
		 * 선언된 ServletContext의 필터 매핑보다 이전(false) / 이후(true)에 매핑할지 결정 urlPatterns
		 */

	}

}
